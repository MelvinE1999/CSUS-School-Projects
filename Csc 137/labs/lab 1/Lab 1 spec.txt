For each of the problems below you will design the circuit using techniques discussed in lecture. If minimization is necessary then you must show all work using the method described. For K-maps you may not use any online solver. Now, I’m well aware that these exist and that students regularly use them. For labs in this course, however, you are required to create your own k-maps using features of your editing environment, e.g., tables, rectangles, etc. The reason for this is that you must practice k-maps to build a good understanding of circuit minimization. If you practice creating your own, then you will quickly build insight.  As with all submitted work in this course, you may not submit anything that’s hand written. That said, my advice is to follow the procedure below for all of your labs.

Hand write your lab problems. This will give you the experience that you need in working with k-maps and digital logic.
Transcribe your k-maps and writeup in a document editor of your choice. 
Create and test any schematics using LogiSim. 
Export images from LogiSim to include schematics. 
Note: You must use the built in export feature in LogiSim which will give you clean and appropriately sized images. Make sure that you disable the printer output option. You will lose points if you submit improperly sized, pixelated, or screen captured images. 
You will find it super helpful for upcoming labs to define your submitted circuit as a sub-circuit and define a separate testing circuit. I will provide a simple example so that you understand clearly what I mean. You are not required to provide testing circuits for this lab, but the process will make your circuits neater and easier to debug. 
Print your document to pdf and submit your pdf
Note: You are not required to submit your source document, whether it’s .tex, .docx, or whatever. However, if I suspect that you used a solver then you will be required to provide your source document for verification. This means that if you choose to cheat and use a solver, that you still have to create the table manually. This is to level the playing field. Everyone has to do the work of manually creating their tables. 
Keep in mind that the quizzes will have questions that you are expected to be able to answer quickly. If you haven’t practiced k-maps then these questions will seem extraordinarily difficult. If you have practiced k-maps then you should have developed the conceptual understanding to answer these questions easily. 
Working these labs is the part of this course that will solidify the concepts in your mind. Shortchanging the process early will make the latter part of the course much more difficult. You may use whatever tools that you are comfortable with to create your lab writeup. That said, if you are up for the challenge. I encourage you to use latex. There are packages for latex that make drawing k-maps relatively straightforward and reasonably logical. I want to warn you though, latex has something of a learning curve. I have observed that students who use latex will, on average, score higher on the labs. This is part self-selection, but also partly because latex makes good layout decisions. Hence, students who submit documents created with latex will seldom lose points for neatness and the use of latex helps with organization. 

You are submitting a relaxed lab report. You should know what a lab report looks like because juniors and seniors should have already taken a lab science course. You do not need an abstract or some of the more formal parts of a lab report. However, there are hard requirements and failure to follow these instructions will cost you points. You must include the following and your report must be written using complete sentences. 

Title Page
For each question
The question itself.
Your solution
A brief discussion and circuit description 
A description of the circuit and your solution
Methods that you used to solve the problem
Any necessary references
For labs that have a overarching theme, you must include a more general introduction and summary. This first lab is just a collection of problems so that is not necessary here. Again, this is a relaxed lab report. You are not expected to incorporate much of the boiler plate that is common in physics or chemistry lab reports, however, you are expected to completely write up each question such that your solution is a self contained description of the problem with your solution. I should not have to look at any other document to know what problem you are solving and to understand how you solved the problem.  Note: This means that it is not just the circuit and a few words. It includes all equations, truth tables, k-maps, reductions, conversions, everything! Anything that helps you tell the story of how you solved this problem is what you want to include here.

The goal of having your write things up is to thoroughly engage you in the problem. Yes, it takes time, procrastinating on labs and then complaining that you didn’t have enough time to do all of the “extra writeup work” will fall on deaf ears. It is in your interest to embrace this process as a part of learning this material. Writing a proper circuit description and discussion reinforces your understanding and pays back substantially in solving future labs. 

Problems
 

Design a circuit that has three inputs and two outputs. Output 1 indicates when the 3 bit unsigned input is odd and output 2 indicates when the 3 bit unsigned input value is even. Provide the initial equations that describe your circuit and minimize your output equations using k-maps. Draw your circuits from the minimized equations using AND, OR, and NOT gates.  Now, given that you have two outputs, two initial equations, two k-maps, and two solutions, you should have two circuits:
These circuits should be minimal, but, what does this mean?
If possible, draw a (third) simpler circuit that will give both outputs.
Design a circuit that has four inputs and three outputs. Output one indicates whether the two’s complement signed 4 bit input is larger than 5, output two indicates if the signed 4 bit input is smaller than -5, and output three indicates that the signed 4 bit input is equal to zero. Provide the initial equations that describe your circuit and minimize your output equations using k-maps. Draw your circuits from the minimized equations using AND, OR, and NOT gates.

Redraw your equations using NAND gates only.
You should have three NAND gate circuits. Think about whether or not you can reuse common segments of your NAND only circuits. If so, draw a new common circuit that is as minimal as you can achieve and describe your process for creating your circuit. If not discuss why it’s not possible. 
Consider an apartment that has two bedrooms and a shared hallway to a common area. There is a single hall light and a switch in each room to turn on the hall light. No matter what position each switch is in, flipping either switch turns the hall light on if off, or off if on. Your goal is to design a logic circuit to represent this problem. Define the inputs and outputs and then provide the initial equations that describe your circuit and minimize your output equations using k-maps. Draw your circuits from the minimized equations using AND, OR, and NOT gates. 

Now that you’ve designed this circuit can you reduce the number of gates? You may use any kind of gates that we have discussed in class. 
Your landlord is thinking of adding a third bedroom. Can your design be easily modified to accommodate this? Why or why not?
Design a circuit that has four inputs and three outputs. The four inputs are considered to be two 2-bit inputs. One output views the two inputs to be binary numbers and indicates when the two input number are not equivalent. The other output considers the two inputs to be stone-age binary inputs and indicates when the two binary inputs are equivalent (see the concept of stone age unary on page 62 of Digital McLogic Design. In stone age binary, 0=finger down, 1=finger up, note that the fingers can be held up in any order). The third output indicates when the previously described outputs are both in an “on” state. For this problem, implement the first two outputs using POS forms; implement the third output in any way you deem appropriate, but minimize your use of gates in the implementation.

A given circuit has four inputs. Two of the inputs are considered the fractional portion of a binary number while the other two inputs are considered the integral portion of the binary number. The outputs of this circuit should represent a 2-bit binary number associated with the 4-bit input but with rounding up and down. In other words, if the input is greater or equal to 0.5, the output should represent the input rounded up. Otherwise, it output should represent the input rounded down to the nearest integer. Note: For this exercise you may assume that the input will never be larger than can be represented by the output, in other words, it will not overflow. You may treat any overflow input conditions as don’t cares. Provide a truth table, a reduced Boolean equation and circuit diagram for your solution using AND, OR, and NOT gates. 